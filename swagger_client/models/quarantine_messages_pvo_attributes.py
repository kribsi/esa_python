# coding: utf-8

"""
    Secure Email Gateway API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 2.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class QuarantineMessagesPvoAttributes(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'esa_host_name': 'str',
        'esa_mid': 'int',
        'from_address': 'list[str]',
        'in_quarantines': 'str',
        'originating_esa_ip': 'str',
        'quarantine_for_reason': 'list[str]',
        'quarantine_for_reason_dict': 'list[QuarantineMessagesPvoAttributesQuarantineForReasonDict]',
        'received': 'str',
        'recipient': 'list[str]',
        'scheduled_exit': 'str',
        'sender': 'str',
        'size': 'str',
        'subject': 'str'
    }

    attribute_map = {
        'esa_host_name': 'esaHostName',
        'esa_mid': 'esaMid',
        'from_address': 'fromAddress',
        'in_quarantines': 'inQuarantines',
        'originating_esa_ip': 'originatingEsaIp',
        'quarantine_for_reason': 'quarantineForReason',
        'quarantine_for_reason_dict': 'quarantineForReasonDict',
        'received': 'received',
        'recipient': 'recipient',
        'scheduled_exit': 'scheduledExit',
        'sender': 'sender',
        'size': 'size',
        'subject': 'subject'
    }

    def __init__(self, esa_host_name=None, esa_mid=None, from_address=None, in_quarantines=None, originating_esa_ip=None, quarantine_for_reason=None, quarantine_for_reason_dict=None, received=None, recipient=None, scheduled_exit=None, sender=None, size=None, subject=None):  # noqa: E501
        """QuarantineMessagesPvoAttributes - a model defined in Swagger"""  # noqa: E501
        self._esa_host_name = None
        self._esa_mid = None
        self._from_address = None
        self._in_quarantines = None
        self._originating_esa_ip = None
        self._quarantine_for_reason = None
        self._quarantine_for_reason_dict = None
        self._received = None
        self._recipient = None
        self._scheduled_exit = None
        self._sender = None
        self._size = None
        self._subject = None
        self.discriminator = None
        if esa_host_name is not None:
            self.esa_host_name = esa_host_name
        if esa_mid is not None:
            self.esa_mid = esa_mid
        if from_address is not None:
            self.from_address = from_address
        if in_quarantines is not None:
            self.in_quarantines = in_quarantines
        if originating_esa_ip is not None:
            self.originating_esa_ip = originating_esa_ip
        if quarantine_for_reason is not None:
            self.quarantine_for_reason = quarantine_for_reason
        if quarantine_for_reason_dict is not None:
            self.quarantine_for_reason_dict = quarantine_for_reason_dict
        if received is not None:
            self.received = received
        if recipient is not None:
            self.recipient = recipient
        if scheduled_exit is not None:
            self.scheduled_exit = scheduled_exit
        if sender is not None:
            self.sender = sender
        if size is not None:
            self.size = size
        if subject is not None:
            self.subject = subject

    @property
    def esa_host_name(self):
        """Gets the esa_host_name of this QuarantineMessagesPvoAttributes.  # noqa: E501


        :return: The esa_host_name of this QuarantineMessagesPvoAttributes.  # noqa: E501
        :rtype: str
        """
        return self._esa_host_name

    @esa_host_name.setter
    def esa_host_name(self, esa_host_name):
        """Sets the esa_host_name of this QuarantineMessagesPvoAttributes.


        :param esa_host_name: The esa_host_name of this QuarantineMessagesPvoAttributes.  # noqa: E501
        :type: str
        """

        self._esa_host_name = esa_host_name

    @property
    def esa_mid(self):
        """Gets the esa_mid of this QuarantineMessagesPvoAttributes.  # noqa: E501


        :return: The esa_mid of this QuarantineMessagesPvoAttributes.  # noqa: E501
        :rtype: int
        """
        return self._esa_mid

    @esa_mid.setter
    def esa_mid(self, esa_mid):
        """Sets the esa_mid of this QuarantineMessagesPvoAttributes.


        :param esa_mid: The esa_mid of this QuarantineMessagesPvoAttributes.  # noqa: E501
        :type: int
        """

        self._esa_mid = esa_mid

    @property
    def from_address(self):
        """Gets the from_address of this QuarantineMessagesPvoAttributes.  # noqa: E501


        :return: The from_address of this QuarantineMessagesPvoAttributes.  # noqa: E501
        :rtype: list[str]
        """
        return self._from_address

    @from_address.setter
    def from_address(self, from_address):
        """Sets the from_address of this QuarantineMessagesPvoAttributes.


        :param from_address: The from_address of this QuarantineMessagesPvoAttributes.  # noqa: E501
        :type: list[str]
        """

        self._from_address = from_address

    @property
    def in_quarantines(self):
        """Gets the in_quarantines of this QuarantineMessagesPvoAttributes.  # noqa: E501


        :return: The in_quarantines of this QuarantineMessagesPvoAttributes.  # noqa: E501
        :rtype: str
        """
        return self._in_quarantines

    @in_quarantines.setter
    def in_quarantines(self, in_quarantines):
        """Sets the in_quarantines of this QuarantineMessagesPvoAttributes.


        :param in_quarantines: The in_quarantines of this QuarantineMessagesPvoAttributes.  # noqa: E501
        :type: str
        """

        self._in_quarantines = in_quarantines

    @property
    def originating_esa_ip(self):
        """Gets the originating_esa_ip of this QuarantineMessagesPvoAttributes.  # noqa: E501


        :return: The originating_esa_ip of this QuarantineMessagesPvoAttributes.  # noqa: E501
        :rtype: str
        """
        return self._originating_esa_ip

    @originating_esa_ip.setter
    def originating_esa_ip(self, originating_esa_ip):
        """Sets the originating_esa_ip of this QuarantineMessagesPvoAttributes.


        :param originating_esa_ip: The originating_esa_ip of this QuarantineMessagesPvoAttributes.  # noqa: E501
        :type: str
        """

        self._originating_esa_ip = originating_esa_ip

    @property
    def quarantine_for_reason(self):
        """Gets the quarantine_for_reason of this QuarantineMessagesPvoAttributes.  # noqa: E501


        :return: The quarantine_for_reason of this QuarantineMessagesPvoAttributes.  # noqa: E501
        :rtype: list[str]
        """
        return self._quarantine_for_reason

    @quarantine_for_reason.setter
    def quarantine_for_reason(self, quarantine_for_reason):
        """Sets the quarantine_for_reason of this QuarantineMessagesPvoAttributes.


        :param quarantine_for_reason: The quarantine_for_reason of this QuarantineMessagesPvoAttributes.  # noqa: E501
        :type: list[str]
        """

        self._quarantine_for_reason = quarantine_for_reason

    @property
    def quarantine_for_reason_dict(self):
        """Gets the quarantine_for_reason_dict of this QuarantineMessagesPvoAttributes.  # noqa: E501


        :return: The quarantine_for_reason_dict of this QuarantineMessagesPvoAttributes.  # noqa: E501
        :rtype: list[QuarantineMessagesPvoAttributesQuarantineForReasonDict]
        """
        return self._quarantine_for_reason_dict

    @quarantine_for_reason_dict.setter
    def quarantine_for_reason_dict(self, quarantine_for_reason_dict):
        """Sets the quarantine_for_reason_dict of this QuarantineMessagesPvoAttributes.


        :param quarantine_for_reason_dict: The quarantine_for_reason_dict of this QuarantineMessagesPvoAttributes.  # noqa: E501
        :type: list[QuarantineMessagesPvoAttributesQuarantineForReasonDict]
        """

        self._quarantine_for_reason_dict = quarantine_for_reason_dict

    @property
    def received(self):
        """Gets the received of this QuarantineMessagesPvoAttributes.  # noqa: E501


        :return: The received of this QuarantineMessagesPvoAttributes.  # noqa: E501
        :rtype: str
        """
        return self._received

    @received.setter
    def received(self, received):
        """Sets the received of this QuarantineMessagesPvoAttributes.


        :param received: The received of this QuarantineMessagesPvoAttributes.  # noqa: E501
        :type: str
        """

        self._received = received

    @property
    def recipient(self):
        """Gets the recipient of this QuarantineMessagesPvoAttributes.  # noqa: E501


        :return: The recipient of this QuarantineMessagesPvoAttributes.  # noqa: E501
        :rtype: list[str]
        """
        return self._recipient

    @recipient.setter
    def recipient(self, recipient):
        """Sets the recipient of this QuarantineMessagesPvoAttributes.


        :param recipient: The recipient of this QuarantineMessagesPvoAttributes.  # noqa: E501
        :type: list[str]
        """

        self._recipient = recipient

    @property
    def scheduled_exit(self):
        """Gets the scheduled_exit of this QuarantineMessagesPvoAttributes.  # noqa: E501


        :return: The scheduled_exit of this QuarantineMessagesPvoAttributes.  # noqa: E501
        :rtype: str
        """
        return self._scheduled_exit

    @scheduled_exit.setter
    def scheduled_exit(self, scheduled_exit):
        """Sets the scheduled_exit of this QuarantineMessagesPvoAttributes.


        :param scheduled_exit: The scheduled_exit of this QuarantineMessagesPvoAttributes.  # noqa: E501
        :type: str
        """

        self._scheduled_exit = scheduled_exit

    @property
    def sender(self):
        """Gets the sender of this QuarantineMessagesPvoAttributes.  # noqa: E501


        :return: The sender of this QuarantineMessagesPvoAttributes.  # noqa: E501
        :rtype: str
        """
        return self._sender

    @sender.setter
    def sender(self, sender):
        """Sets the sender of this QuarantineMessagesPvoAttributes.


        :param sender: The sender of this QuarantineMessagesPvoAttributes.  # noqa: E501
        :type: str
        """

        self._sender = sender

    @property
    def size(self):
        """Gets the size of this QuarantineMessagesPvoAttributes.  # noqa: E501


        :return: The size of this QuarantineMessagesPvoAttributes.  # noqa: E501
        :rtype: str
        """
        return self._size

    @size.setter
    def size(self, size):
        """Sets the size of this QuarantineMessagesPvoAttributes.


        :param size: The size of this QuarantineMessagesPvoAttributes.  # noqa: E501
        :type: str
        """

        self._size = size

    @property
    def subject(self):
        """Gets the subject of this QuarantineMessagesPvoAttributes.  # noqa: E501


        :return: The subject of this QuarantineMessagesPvoAttributes.  # noqa: E501
        :rtype: str
        """
        return self._subject

    @subject.setter
    def subject(self, subject):
        """Sets the subject of this QuarantineMessagesPvoAttributes.


        :param subject: The subject of this QuarantineMessagesPvoAttributes.  # noqa: E501
        :type: str
        """

        self._subject = subject

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(QuarantineMessagesPvoAttributes, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, QuarantineMessagesPvoAttributes):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
