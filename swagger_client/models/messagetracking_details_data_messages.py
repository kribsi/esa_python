# coding: utf-8

"""
    Secure Email Gateway API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 2.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class MessagetrackingDetailsDataMessages(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'attachments': 'list[str]',
        'direction': 'str',
        'host_name': 'str',
        'is_complete_data': 'bool',
        'mail_policy': 'list[str]',
        'message_size': 'str',
        'message_status': 'str',
        'mid': 'list[int]',
        'mid_header': 'str',
        'recipient': 'list[str]',
        'sender': 'str',
        'sender_group': 'str',
        'sending_host_summary': 'MessagetrackingAmpdetailsDataMessagesSendingHostSummary',
        'show_amp': 'bool',
        'show_dlp': 'bool',
        'show_summary_time_box': 'bool',
        'show_url': 'bool',
        'smtp_auth_id': 'str',
        'subject': 'str',
        'summary': 'list[MessagetrackingAmpdetailsDataMessagesAmpDetails]',
        'timestamp': 'str'
    }

    attribute_map = {
        'attachments': 'attachments',
        'direction': 'direction',
        'host_name': 'hostName',
        'is_complete_data': 'isCompleteData',
        'mail_policy': 'mailPolicy',
        'message_size': 'messageSize',
        'message_status': 'messageStatus',
        'mid': 'mid',
        'mid_header': 'midHeader',
        'recipient': 'recipient',
        'sender': 'sender',
        'sender_group': 'senderGroup',
        'sending_host_summary': 'sendingHostSummary',
        'show_amp': 'showAMP',
        'show_dlp': 'showDLP',
        'show_summary_time_box': 'showSummaryTimeBox',
        'show_url': 'showURL',
        'smtp_auth_id': 'smtpAuthId',
        'subject': 'subject',
        'summary': 'summary',
        'timestamp': 'timestamp'
    }

    def __init__(self, attachments=None, direction=None, host_name=None, is_complete_data=None, mail_policy=None, message_size=None, message_status=None, mid=None, mid_header=None, recipient=None, sender=None, sender_group=None, sending_host_summary=None, show_amp=None, show_dlp=None, show_summary_time_box=None, show_url=None, smtp_auth_id=None, subject=None, summary=None, timestamp=None):  # noqa: E501
        """MessagetrackingDetailsDataMessages - a model defined in Swagger"""  # noqa: E501
        self._attachments = None
        self._direction = None
        self._host_name = None
        self._is_complete_data = None
        self._mail_policy = None
        self._message_size = None
        self._message_status = None
        self._mid = None
        self._mid_header = None
        self._recipient = None
        self._sender = None
        self._sender_group = None
        self._sending_host_summary = None
        self._show_amp = None
        self._show_dlp = None
        self._show_summary_time_box = None
        self._show_url = None
        self._smtp_auth_id = None
        self._subject = None
        self._summary = None
        self._timestamp = None
        self.discriminator = None
        if attachments is not None:
            self.attachments = attachments
        if direction is not None:
            self.direction = direction
        if host_name is not None:
            self.host_name = host_name
        if is_complete_data is not None:
            self.is_complete_data = is_complete_data
        if mail_policy is not None:
            self.mail_policy = mail_policy
        if message_size is not None:
            self.message_size = message_size
        if message_status is not None:
            self.message_status = message_status
        if mid is not None:
            self.mid = mid
        if mid_header is not None:
            self.mid_header = mid_header
        if recipient is not None:
            self.recipient = recipient
        if sender is not None:
            self.sender = sender
        if sender_group is not None:
            self.sender_group = sender_group
        if sending_host_summary is not None:
            self.sending_host_summary = sending_host_summary
        if show_amp is not None:
            self.show_amp = show_amp
        if show_dlp is not None:
            self.show_dlp = show_dlp
        if show_summary_time_box is not None:
            self.show_summary_time_box = show_summary_time_box
        if show_url is not None:
            self.show_url = show_url
        if smtp_auth_id is not None:
            self.smtp_auth_id = smtp_auth_id
        if subject is not None:
            self.subject = subject
        if summary is not None:
            self.summary = summary
        if timestamp is not None:
            self.timestamp = timestamp

    @property
    def attachments(self):
        """Gets the attachments of this MessagetrackingDetailsDataMessages.  # noqa: E501


        :return: The attachments of this MessagetrackingDetailsDataMessages.  # noqa: E501
        :rtype: list[str]
        """
        return self._attachments

    @attachments.setter
    def attachments(self, attachments):
        """Sets the attachments of this MessagetrackingDetailsDataMessages.


        :param attachments: The attachments of this MessagetrackingDetailsDataMessages.  # noqa: E501
        :type: list[str]
        """

        self._attachments = attachments

    @property
    def direction(self):
        """Gets the direction of this MessagetrackingDetailsDataMessages.  # noqa: E501


        :return: The direction of this MessagetrackingDetailsDataMessages.  # noqa: E501
        :rtype: str
        """
        return self._direction

    @direction.setter
    def direction(self, direction):
        """Sets the direction of this MessagetrackingDetailsDataMessages.


        :param direction: The direction of this MessagetrackingDetailsDataMessages.  # noqa: E501
        :type: str
        """

        self._direction = direction

    @property
    def host_name(self):
        """Gets the host_name of this MessagetrackingDetailsDataMessages.  # noqa: E501


        :return: The host_name of this MessagetrackingDetailsDataMessages.  # noqa: E501
        :rtype: str
        """
        return self._host_name

    @host_name.setter
    def host_name(self, host_name):
        """Sets the host_name of this MessagetrackingDetailsDataMessages.


        :param host_name: The host_name of this MessagetrackingDetailsDataMessages.  # noqa: E501
        :type: str
        """

        self._host_name = host_name

    @property
    def is_complete_data(self):
        """Gets the is_complete_data of this MessagetrackingDetailsDataMessages.  # noqa: E501


        :return: The is_complete_data of this MessagetrackingDetailsDataMessages.  # noqa: E501
        :rtype: bool
        """
        return self._is_complete_data

    @is_complete_data.setter
    def is_complete_data(self, is_complete_data):
        """Sets the is_complete_data of this MessagetrackingDetailsDataMessages.


        :param is_complete_data: The is_complete_data of this MessagetrackingDetailsDataMessages.  # noqa: E501
        :type: bool
        """

        self._is_complete_data = is_complete_data

    @property
    def mail_policy(self):
        """Gets the mail_policy of this MessagetrackingDetailsDataMessages.  # noqa: E501


        :return: The mail_policy of this MessagetrackingDetailsDataMessages.  # noqa: E501
        :rtype: list[str]
        """
        return self._mail_policy

    @mail_policy.setter
    def mail_policy(self, mail_policy):
        """Sets the mail_policy of this MessagetrackingDetailsDataMessages.


        :param mail_policy: The mail_policy of this MessagetrackingDetailsDataMessages.  # noqa: E501
        :type: list[str]
        """

        self._mail_policy = mail_policy

    @property
    def message_size(self):
        """Gets the message_size of this MessagetrackingDetailsDataMessages.  # noqa: E501


        :return: The message_size of this MessagetrackingDetailsDataMessages.  # noqa: E501
        :rtype: str
        """
        return self._message_size

    @message_size.setter
    def message_size(self, message_size):
        """Sets the message_size of this MessagetrackingDetailsDataMessages.


        :param message_size: The message_size of this MessagetrackingDetailsDataMessages.  # noqa: E501
        :type: str
        """

        self._message_size = message_size

    @property
    def message_status(self):
        """Gets the message_status of this MessagetrackingDetailsDataMessages.  # noqa: E501


        :return: The message_status of this MessagetrackingDetailsDataMessages.  # noqa: E501
        :rtype: str
        """
        return self._message_status

    @message_status.setter
    def message_status(self, message_status):
        """Sets the message_status of this MessagetrackingDetailsDataMessages.


        :param message_status: The message_status of this MessagetrackingDetailsDataMessages.  # noqa: E501
        :type: str
        """

        self._message_status = message_status

    @property
    def mid(self):
        """Gets the mid of this MessagetrackingDetailsDataMessages.  # noqa: E501


        :return: The mid of this MessagetrackingDetailsDataMessages.  # noqa: E501
        :rtype: list[int]
        """
        return self._mid

    @mid.setter
    def mid(self, mid):
        """Sets the mid of this MessagetrackingDetailsDataMessages.


        :param mid: The mid of this MessagetrackingDetailsDataMessages.  # noqa: E501
        :type: list[int]
        """

        self._mid = mid

    @property
    def mid_header(self):
        """Gets the mid_header of this MessagetrackingDetailsDataMessages.  # noqa: E501


        :return: The mid_header of this MessagetrackingDetailsDataMessages.  # noqa: E501
        :rtype: str
        """
        return self._mid_header

    @mid_header.setter
    def mid_header(self, mid_header):
        """Sets the mid_header of this MessagetrackingDetailsDataMessages.


        :param mid_header: The mid_header of this MessagetrackingDetailsDataMessages.  # noqa: E501
        :type: str
        """

        self._mid_header = mid_header

    @property
    def recipient(self):
        """Gets the recipient of this MessagetrackingDetailsDataMessages.  # noqa: E501


        :return: The recipient of this MessagetrackingDetailsDataMessages.  # noqa: E501
        :rtype: list[str]
        """
        return self._recipient

    @recipient.setter
    def recipient(self, recipient):
        """Sets the recipient of this MessagetrackingDetailsDataMessages.


        :param recipient: The recipient of this MessagetrackingDetailsDataMessages.  # noqa: E501
        :type: list[str]
        """

        self._recipient = recipient

    @property
    def sender(self):
        """Gets the sender of this MessagetrackingDetailsDataMessages.  # noqa: E501


        :return: The sender of this MessagetrackingDetailsDataMessages.  # noqa: E501
        :rtype: str
        """
        return self._sender

    @sender.setter
    def sender(self, sender):
        """Sets the sender of this MessagetrackingDetailsDataMessages.


        :param sender: The sender of this MessagetrackingDetailsDataMessages.  # noqa: E501
        :type: str
        """

        self._sender = sender

    @property
    def sender_group(self):
        """Gets the sender_group of this MessagetrackingDetailsDataMessages.  # noqa: E501


        :return: The sender_group of this MessagetrackingDetailsDataMessages.  # noqa: E501
        :rtype: str
        """
        return self._sender_group

    @sender_group.setter
    def sender_group(self, sender_group):
        """Sets the sender_group of this MessagetrackingDetailsDataMessages.


        :param sender_group: The sender_group of this MessagetrackingDetailsDataMessages.  # noqa: E501
        :type: str
        """

        self._sender_group = sender_group

    @property
    def sending_host_summary(self):
        """Gets the sending_host_summary of this MessagetrackingDetailsDataMessages.  # noqa: E501


        :return: The sending_host_summary of this MessagetrackingDetailsDataMessages.  # noqa: E501
        :rtype: MessagetrackingAmpdetailsDataMessagesSendingHostSummary
        """
        return self._sending_host_summary

    @sending_host_summary.setter
    def sending_host_summary(self, sending_host_summary):
        """Sets the sending_host_summary of this MessagetrackingDetailsDataMessages.


        :param sending_host_summary: The sending_host_summary of this MessagetrackingDetailsDataMessages.  # noqa: E501
        :type: MessagetrackingAmpdetailsDataMessagesSendingHostSummary
        """

        self._sending_host_summary = sending_host_summary

    @property
    def show_amp(self):
        """Gets the show_amp of this MessagetrackingDetailsDataMessages.  # noqa: E501


        :return: The show_amp of this MessagetrackingDetailsDataMessages.  # noqa: E501
        :rtype: bool
        """
        return self._show_amp

    @show_amp.setter
    def show_amp(self, show_amp):
        """Sets the show_amp of this MessagetrackingDetailsDataMessages.


        :param show_amp: The show_amp of this MessagetrackingDetailsDataMessages.  # noqa: E501
        :type: bool
        """

        self._show_amp = show_amp

    @property
    def show_dlp(self):
        """Gets the show_dlp of this MessagetrackingDetailsDataMessages.  # noqa: E501


        :return: The show_dlp of this MessagetrackingDetailsDataMessages.  # noqa: E501
        :rtype: bool
        """
        return self._show_dlp

    @show_dlp.setter
    def show_dlp(self, show_dlp):
        """Sets the show_dlp of this MessagetrackingDetailsDataMessages.


        :param show_dlp: The show_dlp of this MessagetrackingDetailsDataMessages.  # noqa: E501
        :type: bool
        """

        self._show_dlp = show_dlp

    @property
    def show_summary_time_box(self):
        """Gets the show_summary_time_box of this MessagetrackingDetailsDataMessages.  # noqa: E501


        :return: The show_summary_time_box of this MessagetrackingDetailsDataMessages.  # noqa: E501
        :rtype: bool
        """
        return self._show_summary_time_box

    @show_summary_time_box.setter
    def show_summary_time_box(self, show_summary_time_box):
        """Sets the show_summary_time_box of this MessagetrackingDetailsDataMessages.


        :param show_summary_time_box: The show_summary_time_box of this MessagetrackingDetailsDataMessages.  # noqa: E501
        :type: bool
        """

        self._show_summary_time_box = show_summary_time_box

    @property
    def show_url(self):
        """Gets the show_url of this MessagetrackingDetailsDataMessages.  # noqa: E501


        :return: The show_url of this MessagetrackingDetailsDataMessages.  # noqa: E501
        :rtype: bool
        """
        return self._show_url

    @show_url.setter
    def show_url(self, show_url):
        """Sets the show_url of this MessagetrackingDetailsDataMessages.


        :param show_url: The show_url of this MessagetrackingDetailsDataMessages.  # noqa: E501
        :type: bool
        """

        self._show_url = show_url

    @property
    def smtp_auth_id(self):
        """Gets the smtp_auth_id of this MessagetrackingDetailsDataMessages.  # noqa: E501


        :return: The smtp_auth_id of this MessagetrackingDetailsDataMessages.  # noqa: E501
        :rtype: str
        """
        return self._smtp_auth_id

    @smtp_auth_id.setter
    def smtp_auth_id(self, smtp_auth_id):
        """Sets the smtp_auth_id of this MessagetrackingDetailsDataMessages.


        :param smtp_auth_id: The smtp_auth_id of this MessagetrackingDetailsDataMessages.  # noqa: E501
        :type: str
        """

        self._smtp_auth_id = smtp_auth_id

    @property
    def subject(self):
        """Gets the subject of this MessagetrackingDetailsDataMessages.  # noqa: E501


        :return: The subject of this MessagetrackingDetailsDataMessages.  # noqa: E501
        :rtype: str
        """
        return self._subject

    @subject.setter
    def subject(self, subject):
        """Sets the subject of this MessagetrackingDetailsDataMessages.


        :param subject: The subject of this MessagetrackingDetailsDataMessages.  # noqa: E501
        :type: str
        """

        self._subject = subject

    @property
    def summary(self):
        """Gets the summary of this MessagetrackingDetailsDataMessages.  # noqa: E501


        :return: The summary of this MessagetrackingDetailsDataMessages.  # noqa: E501
        :rtype: list[MessagetrackingAmpdetailsDataMessagesAmpDetails]
        """
        return self._summary

    @summary.setter
    def summary(self, summary):
        """Sets the summary of this MessagetrackingDetailsDataMessages.


        :param summary: The summary of this MessagetrackingDetailsDataMessages.  # noqa: E501
        :type: list[MessagetrackingAmpdetailsDataMessagesAmpDetails]
        """

        self._summary = summary

    @property
    def timestamp(self):
        """Gets the timestamp of this MessagetrackingDetailsDataMessages.  # noqa: E501


        :return: The timestamp of this MessagetrackingDetailsDataMessages.  # noqa: E501
        :rtype: str
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp):
        """Sets the timestamp of this MessagetrackingDetailsDataMessages.


        :param timestamp: The timestamp of this MessagetrackingDetailsDataMessages.  # noqa: E501
        :type: str
        """

        self._timestamp = timestamp

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(MessagetrackingDetailsDataMessages, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, MessagetrackingDetailsDataMessages):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
