# coding: utf-8

"""
    Secure Email Gateway API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 2.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class QuarantineMessagesPvoRulesDataAttributes(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'average_message_size': 'str',
        'capacity': 'str',
        'number_of_messages': 'int',
        'rule_description': 'str',
        'rule_id': 'str',
        'total_size': 'str'
    }

    attribute_map = {
        'average_message_size': 'averageMessageSize',
        'capacity': 'capacity',
        'number_of_messages': 'numberOfMessages',
        'rule_description': 'ruleDescription',
        'rule_id': 'ruleId',
        'total_size': 'totalSize'
    }

    def __init__(self, average_message_size=None, capacity=None, number_of_messages=None, rule_description=None, rule_id=None, total_size=None):  # noqa: E501
        """QuarantineMessagesPvoRulesDataAttributes - a model defined in Swagger"""  # noqa: E501
        self._average_message_size = None
        self._capacity = None
        self._number_of_messages = None
        self._rule_description = None
        self._rule_id = None
        self._total_size = None
        self.discriminator = None
        if average_message_size is not None:
            self.average_message_size = average_message_size
        if capacity is not None:
            self.capacity = capacity
        if number_of_messages is not None:
            self.number_of_messages = number_of_messages
        if rule_description is not None:
            self.rule_description = rule_description
        if rule_id is not None:
            self.rule_id = rule_id
        if total_size is not None:
            self.total_size = total_size

    @property
    def average_message_size(self):
        """Gets the average_message_size of this QuarantineMessagesPvoRulesDataAttributes.  # noqa: E501


        :return: The average_message_size of this QuarantineMessagesPvoRulesDataAttributes.  # noqa: E501
        :rtype: str
        """
        return self._average_message_size

    @average_message_size.setter
    def average_message_size(self, average_message_size):
        """Sets the average_message_size of this QuarantineMessagesPvoRulesDataAttributes.


        :param average_message_size: The average_message_size of this QuarantineMessagesPvoRulesDataAttributes.  # noqa: E501
        :type: str
        """

        self._average_message_size = average_message_size

    @property
    def capacity(self):
        """Gets the capacity of this QuarantineMessagesPvoRulesDataAttributes.  # noqa: E501


        :return: The capacity of this QuarantineMessagesPvoRulesDataAttributes.  # noqa: E501
        :rtype: str
        """
        return self._capacity

    @capacity.setter
    def capacity(self, capacity):
        """Sets the capacity of this QuarantineMessagesPvoRulesDataAttributes.


        :param capacity: The capacity of this QuarantineMessagesPvoRulesDataAttributes.  # noqa: E501
        :type: str
        """

        self._capacity = capacity

    @property
    def number_of_messages(self):
        """Gets the number_of_messages of this QuarantineMessagesPvoRulesDataAttributes.  # noqa: E501


        :return: The number_of_messages of this QuarantineMessagesPvoRulesDataAttributes.  # noqa: E501
        :rtype: int
        """
        return self._number_of_messages

    @number_of_messages.setter
    def number_of_messages(self, number_of_messages):
        """Sets the number_of_messages of this QuarantineMessagesPvoRulesDataAttributes.


        :param number_of_messages: The number_of_messages of this QuarantineMessagesPvoRulesDataAttributes.  # noqa: E501
        :type: int
        """

        self._number_of_messages = number_of_messages

    @property
    def rule_description(self):
        """Gets the rule_description of this QuarantineMessagesPvoRulesDataAttributes.  # noqa: E501


        :return: The rule_description of this QuarantineMessagesPvoRulesDataAttributes.  # noqa: E501
        :rtype: str
        """
        return self._rule_description

    @rule_description.setter
    def rule_description(self, rule_description):
        """Sets the rule_description of this QuarantineMessagesPvoRulesDataAttributes.


        :param rule_description: The rule_description of this QuarantineMessagesPvoRulesDataAttributes.  # noqa: E501
        :type: str
        """

        self._rule_description = rule_description

    @property
    def rule_id(self):
        """Gets the rule_id of this QuarantineMessagesPvoRulesDataAttributes.  # noqa: E501


        :return: The rule_id of this QuarantineMessagesPvoRulesDataAttributes.  # noqa: E501
        :rtype: str
        """
        return self._rule_id

    @rule_id.setter
    def rule_id(self, rule_id):
        """Sets the rule_id of this QuarantineMessagesPvoRulesDataAttributes.


        :param rule_id: The rule_id of this QuarantineMessagesPvoRulesDataAttributes.  # noqa: E501
        :type: str
        """

        self._rule_id = rule_id

    @property
    def total_size(self):
        """Gets the total_size of this QuarantineMessagesPvoRulesDataAttributes.  # noqa: E501


        :return: The total_size of this QuarantineMessagesPvoRulesDataAttributes.  # noqa: E501
        :rtype: str
        """
        return self._total_size

    @total_size.setter
    def total_size(self, total_size):
        """Sets the total_size of this QuarantineMessagesPvoRulesDataAttributes.


        :param total_size: The total_size of this QuarantineMessagesPvoRulesDataAttributes.  # noqa: E501
        :type: str
        """

        self._total_size = total_size

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(QuarantineMessagesPvoRulesDataAttributes, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, QuarantineMessagesPvoRulesDataAttributes):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
