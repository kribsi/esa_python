# coding: utf-8

"""
    Secure Email Gateway API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 2.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class MessagetrackingMessagesAttributes(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'direction': 'str',
        'host_name': 'str',
        'icid': 'int',
        'is_complete_data': 'bool',
        'mail_policy': 'list[str]',
        'message_status': 'str',
        'mid': 'list[int]',
        'recipient': 'list[str]',
        'reply_to': 'str',
        'sbrs': 'str',
        'sender': 'str',
        'sender_domain': 'str',
        'sender_group': 'str',
        'sender_ip': 'str',
        'serial_number': 'str',
        'subject': 'str',
        'timestamp': 'str',
        'verdict_chart': 'str'
    }

    attribute_map = {
        'direction': 'direction',
        'host_name': 'hostName',
        'icid': 'icid',
        'is_complete_data': 'isCompleteData',
        'mail_policy': 'mailPolicy',
        'message_status': 'messageStatus',
        'mid': 'mid',
        'recipient': 'recipient',
        'reply_to': 'replyTo',
        'sbrs': 'sbrs',
        'sender': 'sender',
        'sender_domain': 'senderDomain',
        'sender_group': 'senderGroup',
        'sender_ip': 'senderIp',
        'serial_number': 'serialNumber',
        'subject': 'subject',
        'timestamp': 'timestamp',
        'verdict_chart': 'verdictChart'
    }

    def __init__(self, direction=None, host_name=None, icid=None, is_complete_data=None, mail_policy=None, message_status=None, mid=None, recipient=None, reply_to=None, sbrs=None, sender=None, sender_domain=None, sender_group=None, sender_ip=None, serial_number=None, subject=None, timestamp=None, verdict_chart=None):  # noqa: E501
        """MessagetrackingMessagesAttributes - a model defined in Swagger"""  # noqa: E501
        self._direction = None
        self._host_name = None
        self._icid = None
        self._is_complete_data = None
        self._mail_policy = None
        self._message_status = None
        self._mid = None
        self._recipient = None
        self._reply_to = None
        self._sbrs = None
        self._sender = None
        self._sender_domain = None
        self._sender_group = None
        self._sender_ip = None
        self._serial_number = None
        self._subject = None
        self._timestamp = None
        self._verdict_chart = None
        self.discriminator = None
        if direction is not None:
            self.direction = direction
        if host_name is not None:
            self.host_name = host_name
        if icid is not None:
            self.icid = icid
        if is_complete_data is not None:
            self.is_complete_data = is_complete_data
        if mail_policy is not None:
            self.mail_policy = mail_policy
        if message_status is not None:
            self.message_status = message_status
        if mid is not None:
            self.mid = mid
        if recipient is not None:
            self.recipient = recipient
        if reply_to is not None:
            self.reply_to = reply_to
        if sbrs is not None:
            self.sbrs = sbrs
        if sender is not None:
            self.sender = sender
        if sender_domain is not None:
            self.sender_domain = sender_domain
        if sender_group is not None:
            self.sender_group = sender_group
        if sender_ip is not None:
            self.sender_ip = sender_ip
        if serial_number is not None:
            self.serial_number = serial_number
        if subject is not None:
            self.subject = subject
        if timestamp is not None:
            self.timestamp = timestamp
        if verdict_chart is not None:
            self.verdict_chart = verdict_chart

    @property
    def direction(self):
        """Gets the direction of this MessagetrackingMessagesAttributes.  # noqa: E501


        :return: The direction of this MessagetrackingMessagesAttributes.  # noqa: E501
        :rtype: str
        """
        return self._direction

    @direction.setter
    def direction(self, direction):
        """Sets the direction of this MessagetrackingMessagesAttributes.


        :param direction: The direction of this MessagetrackingMessagesAttributes.  # noqa: E501
        :type: str
        """

        self._direction = direction

    @property
    def host_name(self):
        """Gets the host_name of this MessagetrackingMessagesAttributes.  # noqa: E501


        :return: The host_name of this MessagetrackingMessagesAttributes.  # noqa: E501
        :rtype: str
        """
        return self._host_name

    @host_name.setter
    def host_name(self, host_name):
        """Sets the host_name of this MessagetrackingMessagesAttributes.


        :param host_name: The host_name of this MessagetrackingMessagesAttributes.  # noqa: E501
        :type: str
        """

        self._host_name = host_name

    @property
    def icid(self):
        """Gets the icid of this MessagetrackingMessagesAttributes.  # noqa: E501


        :return: The icid of this MessagetrackingMessagesAttributes.  # noqa: E501
        :rtype: int
        """
        return self._icid

    @icid.setter
    def icid(self, icid):
        """Sets the icid of this MessagetrackingMessagesAttributes.


        :param icid: The icid of this MessagetrackingMessagesAttributes.  # noqa: E501
        :type: int
        """

        self._icid = icid

    @property
    def is_complete_data(self):
        """Gets the is_complete_data of this MessagetrackingMessagesAttributes.  # noqa: E501


        :return: The is_complete_data of this MessagetrackingMessagesAttributes.  # noqa: E501
        :rtype: bool
        """
        return self._is_complete_data

    @is_complete_data.setter
    def is_complete_data(self, is_complete_data):
        """Sets the is_complete_data of this MessagetrackingMessagesAttributes.


        :param is_complete_data: The is_complete_data of this MessagetrackingMessagesAttributes.  # noqa: E501
        :type: bool
        """

        self._is_complete_data = is_complete_data

    @property
    def mail_policy(self):
        """Gets the mail_policy of this MessagetrackingMessagesAttributes.  # noqa: E501


        :return: The mail_policy of this MessagetrackingMessagesAttributes.  # noqa: E501
        :rtype: list[str]
        """
        return self._mail_policy

    @mail_policy.setter
    def mail_policy(self, mail_policy):
        """Sets the mail_policy of this MessagetrackingMessagesAttributes.


        :param mail_policy: The mail_policy of this MessagetrackingMessagesAttributes.  # noqa: E501
        :type: list[str]
        """

        self._mail_policy = mail_policy

    @property
    def message_status(self):
        """Gets the message_status of this MessagetrackingMessagesAttributes.  # noqa: E501


        :return: The message_status of this MessagetrackingMessagesAttributes.  # noqa: E501
        :rtype: str
        """
        return self._message_status

    @message_status.setter
    def message_status(self, message_status):
        """Sets the message_status of this MessagetrackingMessagesAttributes.


        :param message_status: The message_status of this MessagetrackingMessagesAttributes.  # noqa: E501
        :type: str
        """

        self._message_status = message_status

    @property
    def mid(self):
        """Gets the mid of this MessagetrackingMessagesAttributes.  # noqa: E501


        :return: The mid of this MessagetrackingMessagesAttributes.  # noqa: E501
        :rtype: list[int]
        """
        return self._mid

    @mid.setter
    def mid(self, mid):
        """Sets the mid of this MessagetrackingMessagesAttributes.


        :param mid: The mid of this MessagetrackingMessagesAttributes.  # noqa: E501
        :type: list[int]
        """

        self._mid = mid

    @property
    def recipient(self):
        """Gets the recipient of this MessagetrackingMessagesAttributes.  # noqa: E501


        :return: The recipient of this MessagetrackingMessagesAttributes.  # noqa: E501
        :rtype: list[str]
        """
        return self._recipient

    @recipient.setter
    def recipient(self, recipient):
        """Sets the recipient of this MessagetrackingMessagesAttributes.


        :param recipient: The recipient of this MessagetrackingMessagesAttributes.  # noqa: E501
        :type: list[str]
        """

        self._recipient = recipient

    @property
    def reply_to(self):
        """Gets the reply_to of this MessagetrackingMessagesAttributes.  # noqa: E501


        :return: The reply_to of this MessagetrackingMessagesAttributes.  # noqa: E501
        :rtype: str
        """
        return self._reply_to

    @reply_to.setter
    def reply_to(self, reply_to):
        """Sets the reply_to of this MessagetrackingMessagesAttributes.


        :param reply_to: The reply_to of this MessagetrackingMessagesAttributes.  # noqa: E501
        :type: str
        """

        self._reply_to = reply_to

    @property
    def sbrs(self):
        """Gets the sbrs of this MessagetrackingMessagesAttributes.  # noqa: E501


        :return: The sbrs of this MessagetrackingMessagesAttributes.  # noqa: E501
        :rtype: str
        """
        return self._sbrs

    @sbrs.setter
    def sbrs(self, sbrs):
        """Sets the sbrs of this MessagetrackingMessagesAttributes.


        :param sbrs: The sbrs of this MessagetrackingMessagesAttributes.  # noqa: E501
        :type: str
        """

        self._sbrs = sbrs

    @property
    def sender(self):
        """Gets the sender of this MessagetrackingMessagesAttributes.  # noqa: E501


        :return: The sender of this MessagetrackingMessagesAttributes.  # noqa: E501
        :rtype: str
        """
        return self._sender

    @sender.setter
    def sender(self, sender):
        """Sets the sender of this MessagetrackingMessagesAttributes.


        :param sender: The sender of this MessagetrackingMessagesAttributes.  # noqa: E501
        :type: str
        """

        self._sender = sender

    @property
    def sender_domain(self):
        """Gets the sender_domain of this MessagetrackingMessagesAttributes.  # noqa: E501


        :return: The sender_domain of this MessagetrackingMessagesAttributes.  # noqa: E501
        :rtype: str
        """
        return self._sender_domain

    @sender_domain.setter
    def sender_domain(self, sender_domain):
        """Sets the sender_domain of this MessagetrackingMessagesAttributes.


        :param sender_domain: The sender_domain of this MessagetrackingMessagesAttributes.  # noqa: E501
        :type: str
        """

        self._sender_domain = sender_domain

    @property
    def sender_group(self):
        """Gets the sender_group of this MessagetrackingMessagesAttributes.  # noqa: E501


        :return: The sender_group of this MessagetrackingMessagesAttributes.  # noqa: E501
        :rtype: str
        """
        return self._sender_group

    @sender_group.setter
    def sender_group(self, sender_group):
        """Sets the sender_group of this MessagetrackingMessagesAttributes.


        :param sender_group: The sender_group of this MessagetrackingMessagesAttributes.  # noqa: E501
        :type: str
        """

        self._sender_group = sender_group

    @property
    def sender_ip(self):
        """Gets the sender_ip of this MessagetrackingMessagesAttributes.  # noqa: E501


        :return: The sender_ip of this MessagetrackingMessagesAttributes.  # noqa: E501
        :rtype: str
        """
        return self._sender_ip

    @sender_ip.setter
    def sender_ip(self, sender_ip):
        """Sets the sender_ip of this MessagetrackingMessagesAttributes.


        :param sender_ip: The sender_ip of this MessagetrackingMessagesAttributes.  # noqa: E501
        :type: str
        """

        self._sender_ip = sender_ip

    @property
    def serial_number(self):
        """Gets the serial_number of this MessagetrackingMessagesAttributes.  # noqa: E501


        :return: The serial_number of this MessagetrackingMessagesAttributes.  # noqa: E501
        :rtype: str
        """
        return self._serial_number

    @serial_number.setter
    def serial_number(self, serial_number):
        """Sets the serial_number of this MessagetrackingMessagesAttributes.


        :param serial_number: The serial_number of this MessagetrackingMessagesAttributes.  # noqa: E501
        :type: str
        """

        self._serial_number = serial_number

    @property
    def subject(self):
        """Gets the subject of this MessagetrackingMessagesAttributes.  # noqa: E501


        :return: The subject of this MessagetrackingMessagesAttributes.  # noqa: E501
        :rtype: str
        """
        return self._subject

    @subject.setter
    def subject(self, subject):
        """Sets the subject of this MessagetrackingMessagesAttributes.


        :param subject: The subject of this MessagetrackingMessagesAttributes.  # noqa: E501
        :type: str
        """

        self._subject = subject

    @property
    def timestamp(self):
        """Gets the timestamp of this MessagetrackingMessagesAttributes.  # noqa: E501


        :return: The timestamp of this MessagetrackingMessagesAttributes.  # noqa: E501
        :rtype: str
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp):
        """Sets the timestamp of this MessagetrackingMessagesAttributes.


        :param timestamp: The timestamp of this MessagetrackingMessagesAttributes.  # noqa: E501
        :type: str
        """

        self._timestamp = timestamp

    @property
    def verdict_chart(self):
        """Gets the verdict_chart of this MessagetrackingMessagesAttributes.  # noqa: E501


        :return: The verdict_chart of this MessagetrackingMessagesAttributes.  # noqa: E501
        :rtype: str
        """
        return self._verdict_chart

    @verdict_chart.setter
    def verdict_chart(self, verdict_chart):
        """Sets the verdict_chart of this MessagetrackingMessagesAttributes.


        :param verdict_chart: The verdict_chart of this MessagetrackingMessagesAttributes.  # noqa: E501
        :type: str
        """

        self._verdict_chart = verdict_chart

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(MessagetrackingMessagesAttributes, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, MessagetrackingMessagesAttributes):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
