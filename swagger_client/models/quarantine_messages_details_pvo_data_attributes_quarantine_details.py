# coding: utf-8

"""
    Secure Email Gateway API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 2.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class QuarantineMessagesDetailsPvoDataAttributesQuarantineDetails(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'esa_host_name': 'str',
        'originating_esa_ip': 'str',
        'quarantine_name': 'str',
        'reason': 'list[str]',
        'received': 'str',
        'scheduled_exit': 'str'
    }

    attribute_map = {
        'esa_host_name': 'esaHostName',
        'originating_esa_ip': 'originatingEsaIp',
        'quarantine_name': 'quarantineName',
        'reason': 'reason',
        'received': 'received',
        'scheduled_exit': 'scheduledExit'
    }

    def __init__(self, esa_host_name=None, originating_esa_ip=None, quarantine_name=None, reason=None, received=None, scheduled_exit=None):  # noqa: E501
        """QuarantineMessagesDetailsPvoDataAttributesQuarantineDetails - a model defined in Swagger"""  # noqa: E501
        self._esa_host_name = None
        self._originating_esa_ip = None
        self._quarantine_name = None
        self._reason = None
        self._received = None
        self._scheduled_exit = None
        self.discriminator = None
        if esa_host_name is not None:
            self.esa_host_name = esa_host_name
        if originating_esa_ip is not None:
            self.originating_esa_ip = originating_esa_ip
        if quarantine_name is not None:
            self.quarantine_name = quarantine_name
        if reason is not None:
            self.reason = reason
        if received is not None:
            self.received = received
        if scheduled_exit is not None:
            self.scheduled_exit = scheduled_exit

    @property
    def esa_host_name(self):
        """Gets the esa_host_name of this QuarantineMessagesDetailsPvoDataAttributesQuarantineDetails.  # noqa: E501


        :return: The esa_host_name of this QuarantineMessagesDetailsPvoDataAttributesQuarantineDetails.  # noqa: E501
        :rtype: str
        """
        return self._esa_host_name

    @esa_host_name.setter
    def esa_host_name(self, esa_host_name):
        """Sets the esa_host_name of this QuarantineMessagesDetailsPvoDataAttributesQuarantineDetails.


        :param esa_host_name: The esa_host_name of this QuarantineMessagesDetailsPvoDataAttributesQuarantineDetails.  # noqa: E501
        :type: str
        """

        self._esa_host_name = esa_host_name

    @property
    def originating_esa_ip(self):
        """Gets the originating_esa_ip of this QuarantineMessagesDetailsPvoDataAttributesQuarantineDetails.  # noqa: E501


        :return: The originating_esa_ip of this QuarantineMessagesDetailsPvoDataAttributesQuarantineDetails.  # noqa: E501
        :rtype: str
        """
        return self._originating_esa_ip

    @originating_esa_ip.setter
    def originating_esa_ip(self, originating_esa_ip):
        """Sets the originating_esa_ip of this QuarantineMessagesDetailsPvoDataAttributesQuarantineDetails.


        :param originating_esa_ip: The originating_esa_ip of this QuarantineMessagesDetailsPvoDataAttributesQuarantineDetails.  # noqa: E501
        :type: str
        """

        self._originating_esa_ip = originating_esa_ip

    @property
    def quarantine_name(self):
        """Gets the quarantine_name of this QuarantineMessagesDetailsPvoDataAttributesQuarantineDetails.  # noqa: E501


        :return: The quarantine_name of this QuarantineMessagesDetailsPvoDataAttributesQuarantineDetails.  # noqa: E501
        :rtype: str
        """
        return self._quarantine_name

    @quarantine_name.setter
    def quarantine_name(self, quarantine_name):
        """Sets the quarantine_name of this QuarantineMessagesDetailsPvoDataAttributesQuarantineDetails.


        :param quarantine_name: The quarantine_name of this QuarantineMessagesDetailsPvoDataAttributesQuarantineDetails.  # noqa: E501
        :type: str
        """

        self._quarantine_name = quarantine_name

    @property
    def reason(self):
        """Gets the reason of this QuarantineMessagesDetailsPvoDataAttributesQuarantineDetails.  # noqa: E501


        :return: The reason of this QuarantineMessagesDetailsPvoDataAttributesQuarantineDetails.  # noqa: E501
        :rtype: list[str]
        """
        return self._reason

    @reason.setter
    def reason(self, reason):
        """Sets the reason of this QuarantineMessagesDetailsPvoDataAttributesQuarantineDetails.


        :param reason: The reason of this QuarantineMessagesDetailsPvoDataAttributesQuarantineDetails.  # noqa: E501
        :type: list[str]
        """

        self._reason = reason

    @property
    def received(self):
        """Gets the received of this QuarantineMessagesDetailsPvoDataAttributesQuarantineDetails.  # noqa: E501


        :return: The received of this QuarantineMessagesDetailsPvoDataAttributesQuarantineDetails.  # noqa: E501
        :rtype: str
        """
        return self._received

    @received.setter
    def received(self, received):
        """Sets the received of this QuarantineMessagesDetailsPvoDataAttributesQuarantineDetails.


        :param received: The received of this QuarantineMessagesDetailsPvoDataAttributesQuarantineDetails.  # noqa: E501
        :type: str
        """

        self._received = received

    @property
    def scheduled_exit(self):
        """Gets the scheduled_exit of this QuarantineMessagesDetailsPvoDataAttributesQuarantineDetails.  # noqa: E501


        :return: The scheduled_exit of this QuarantineMessagesDetailsPvoDataAttributesQuarantineDetails.  # noqa: E501
        :rtype: str
        """
        return self._scheduled_exit

    @scheduled_exit.setter
    def scheduled_exit(self, scheduled_exit):
        """Sets the scheduled_exit of this QuarantineMessagesDetailsPvoDataAttributesQuarantineDetails.


        :param scheduled_exit: The scheduled_exit of this QuarantineMessagesDetailsPvoDataAttributesQuarantineDetails.  # noqa: E501
        :type: str
        """

        self._scheduled_exit = scheduled_exit

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(QuarantineMessagesDetailsPvoDataAttributesQuarantineDetails, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, QuarantineMessagesDetailsPvoDataAttributesQuarantineDetails):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
